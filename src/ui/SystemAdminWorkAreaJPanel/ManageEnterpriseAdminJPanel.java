/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.SystemAdminWorkAreaJPanel;

import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Role.*;
import Business.Role.Advertisement.*;  
import Business.Role.Delivery.*;       
import Business.Role.Manufacturing.*;  
import Business.Role.Retail.*;        
import Business.Role.Tech.*;          
import Business.UserAccount.UserAccount;
import Business.WorkFlowSystem;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yuanchanglee
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JTable enterpriseAdminTable;
    private JComboBox<Network> networkComboBox;
    private JComboBox<Enterprise> enterpriseComboBox;
    private JComboBox<Role> roleComboBox;
    private JTextField usernameField;
    private JPasswordField passwordField;
    private JTextField nameField;
    private JButton submitButton;

    private WorkFlowSystem system;
    
    /**
     * Creates new form ManageEnterpriseAdminJPanel
     */
    
    public ManageEnterpriseAdminJPanel(WorkFlowSystem system) {
        this.system = system;
        customizeComponents();
        populateTable();
        populateNetworkComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseAdminTable.getModel();
        model.setRowCount(0);

        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getEmployerList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getName(); // 企業名稱
                    row[1] = network.getName(); // 網絡名稱
                    row[2] = userAccount.getUsername(); // 用戶名
                    model.addRow(row);
                }
            }
        }
    }


    private void populateNetworkComboBox() {
        networkComboBox.removeAllItems();
        for (Network network : system.getNetworkList()) {
            networkComboBox.addItem(network); // 添加 Network 物件
        }
    }

    private void populateEnterpriseComboBox(Network network) {
        enterpriseComboBox.removeAllItems();
        for (Enterprise enterprise : network.getEnterpriseList()) {
            enterpriseComboBox.addItem(enterprise); // 添加 Enterprise 物件
        }
    }


    private void customizeComponents() {
        // Main panel layout
        setLayout(new BorderLayout(10, 10));  // Add spacing between components
        setBackground(Color.decode("#F5F7FA")); // Lighter background color
        setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20)); // Add padding

        // ======= Top Title Panel =======
        JPanel titlePanel = new JPanel();
        titlePanel.setBackground(Color.decode("#F5F7FA"));
        JLabel titleLabel = new JLabel("Enterprise Admin Management", SwingConstants.CENTER);
        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));
        titleLabel.setForeground(Color.decode("#2C3E50"));
        titlePanel.add(titleLabel);
        add(titlePanel, BorderLayout.NORTH);

        // ======= Table Panel =======
        JPanel tablePanel = new JPanel(new BorderLayout(0, 10));
        tablePanel.setBackground(Color.decode("#F5F7FA"));
        tablePanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(
            javax.swing.BorderFactory.createTitledBorder("Enterprise Admins"),
            javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10)));

        // Table
        enterpriseAdminTable = new JTable(new DefaultTableModel(
            new Object[][]{},
            new String[]{"Enterprise Name", "Network", "Username"}
        ));
        enterpriseAdminTable.setRowHeight(25);
        enterpriseAdminTable.setFillsViewportHeight(true);
        enterpriseAdminTable.setSelectionBackground(Color.decode("#D4E6F1"));
        enterpriseAdminTable.getTableHeader().setBackground(Color.decode("#2980B9"));
        enterpriseAdminTable.getTableHeader().setForeground(Color.WHITE);
        enterpriseAdminTable.getTableHeader().setFont(new Font("Arial", Font.BOLD, 12));

        JScrollPane scrollPane = new JScrollPane(enterpriseAdminTable);
        scrollPane.setPreferredSize(new Dimension(600, 200));
        tablePanel.add(scrollPane, BorderLayout.CENTER);

        add(tablePanel, BorderLayout.CENTER);

        // ======= Form Panel =======
        JPanel formPanel = new JPanel();
        formPanel.setLayout(new GridBagLayout());
        formPanel.setBackground(Color.decode("#F5F7FA"));
        formPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(
            javax.swing.BorderFactory.createTitledBorder("Add New Admin"),
            javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10)));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(8, 8, 8, 8);
        gbc.fill = GridBagConstraints.HORIZONTAL;

        // Network Selection
        addFormField(formPanel, "Network:", networkComboBox = createStyledComboBox(), gbc, 0);
        networkComboBox.addActionListener(e -> {
            Network selectedNetwork = (Network) networkComboBox.getSelectedItem();
            if (selectedNetwork != null) {
                populateEnterpriseComboBox(selectedNetwork);
            }
        });

        // Enterprise Selection
        addFormField(formPanel, "Enterprise:", enterpriseComboBox = createStyledComboBox(), gbc, 1);
        enterpriseComboBox.addActionListener(e -> {
            Enterprise selectedEnterprise = (Enterprise) enterpriseComboBox.getSelectedItem();
            if (selectedEnterprise != null) {
                populateRoleComboBox(selectedEnterprise);
            }
        });

        // Role Selection
        addFormField(formPanel, "Role:", roleComboBox = createStyledComboBox(), gbc, 2);

        // Username
        addFormField(formPanel, "Username:", usernameField = createStyledTextField(), gbc, 3);

        // Password
        addFormField(formPanel, "Password:", passwordField = createStyledPasswordField(), gbc, 4);

        // Name
        addFormField(formPanel, "Name:", nameField = createStyledTextField(), gbc, 5);

        // Submit Button
        submitButton = new JButton("Create Admin Account");
        submitButton.setBackground(Color.decode("#2980B9"));
        submitButton.setForeground(Color.WHITE);
        submitButton.setFont(new Font("Arial", Font.BOLD, 14));
        submitButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20));
        submitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        submitButton.addActionListener(e -> submitEnterpriseAdmin());

        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.CENTER;
        formPanel.add(submitButton, gbc);

        add(formPanel, BorderLayout.SOUTH);
    }

    // Helper methods for creating styled components
    private JComboBox createStyledComboBox() {
        JComboBox comboBox = new JComboBox();
        comboBox.setPreferredSize(new Dimension(200, 30));
        comboBox.setBackground(Color.WHITE);
        comboBox.setFont(new Font("Arial", Font.PLAIN, 12));
        return comboBox;
    }

    private JTextField createStyledTextField() {
        JTextField textField = new JTextField();
        textField.setPreferredSize(new Dimension(200, 30));
        textField.setFont(new Font("Arial", Font.PLAIN, 12));
        return textField;
    }

    private JPasswordField createStyledPasswordField() {
        JPasswordField passwordField = new JPasswordField();
        passwordField.setPreferredSize(new Dimension(200, 30));
        passwordField.setFont(new Font("Arial", Font.PLAIN, 12));
        return passwordField;
    }

    private void addFormField(JPanel panel, String labelText, JComponent component, 
                             GridBagConstraints gbc, int gridy) {
        JLabel label = new JLabel(labelText);
        label.setFont(new Font("Arial", Font.BOLD, 12));

        gbc.gridx = 0;
        gbc.gridy = gridy;
        gbc.gridwidth = 1;
        gbc.anchor = GridBagConstraints.LINE_END;
        panel.add(label, gbc);

        gbc.gridx = 1;
        gbc.anchor = GridBagConstraints.LINE_START;
        panel.add(component, gbc);
    }
    
    private void submitEnterpriseAdmin() {
        Enterprise enterprise = (Enterprise) enterpriseComboBox.getSelectedItem();
        Role role = (Role) roleComboBox.getSelectedItem();

        if (enterprise == null || role == null) {
            JOptionPane.showMessageDialog(this, 
                "Please select both enterprise and role");
            return;
        }

        String username = usernameField.getText();
        String password = new String(passwordField.getPassword());
        String name = nameField.getText();

        if (username.isEmpty() || password.isEmpty() || name.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "Please fill all fields");
            return;
        }
        // TODO
        // UserAccount account = enterprise.createUserAccount(username, password, role);
//        if (account != null) {
//            populateTable();
//            clearFields();
//            JOptionPane.showMessageDialog(this, 
//                "Enterprise Admin created successfully");
//        }
    }

    private void clearFields() {
        usernameField.setText("");
        passwordField.setText("");
        nameField.setText("");
        roleComboBox.setSelectedIndex(-1);
    }

//    private void submitEnterpriseAdmin() {
//        Network selectedNetwork = (Network) networkComboBox.getSelectedItem();
//        Enterprise selectedEnterprise = (Enterprise) enterpriseComboBox.getSelectedItem();
//
//        String username = usernameField.getText();
//        String password = String.valueOf(passwordField.getPassword());
//        String name = nameField.getText();
//
//        if (selectedNetwork == null || selectedEnterprise == null || username.isEmpty() || password.isEmpty() || name.isEmpty()) {
//            javax.swing.JOptionPane.showMessageDialog(this, "All fields are required.");
//            return;
//        }
//
//        // 創建 Employee 和 UserAccount
//        // Employee employee = selectedEnterprise.getEmployeeDirectory().createEmployee(name);
//        // selectedEnterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
//        populateTable();
//        javax.swing.JOptionPane.showMessageDialog(this, "Enterprise Admin created successfully.");
//    }


    public JTable getEnterpriseAdminTable() {
        return enterpriseAdminTable;
    }

    public JComboBox<Network> getNetworkComboBox() {
        return networkComboBox;
    }

    public JComboBox<Enterprise> getEnterpriseComboBox() {
        return enterpriseComboBox;
    }

    public JTextField getUsernameField() {
        return usernameField;
    }

    public JPasswordField getPasswordField() {
        return passwordField;
    }

    public JTextField getNameField() {
        return nameField;
    }

    public JButton getSubmitButton() {
        return submitButton;
    }
    
        private void populateRoleComboBox(Enterprise enterprise) {
        roleComboBox.removeAllItems();

        if (enterprise != null) {
            switch (enterprise.getType()) {
                case TECH:
                    roleComboBox.addItem(new ProductManagerRole());
                    roleComboBox.addItem(new RDRole());
                    roleComboBox.addItem(new PurchasingManagerRole());
                    roleComboBox.addItem(new MarketingManagerRole());
                    break;

                case MANUFACTURING:
                    roleComboBox.addItem(new ManufacturingManagerRole());
                    roleComboBox.addItem(new ManufacturingWorkerRole());
                    break;

                case DELIVERY:
                    roleComboBox.addItem(new DeliveryManagerRole());
                    roleComboBox.addItem(new DeliveryRole());
                    break;

                case RETAIL:
                    roleComboBox.addItem(new RetailManagerRole());
                    break;

                case ADVERTISING:
                    roleComboBox.addItem(new AdvertisingManagerRole());
                    roleComboBox.addItem(new DigitalAdsStrategistRole());
                    break;
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
