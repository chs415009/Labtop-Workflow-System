/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Manufacturing.ManufacturingManager;


import ui.Tech.PurchaseManager.*;
import Business.Enterprise.Enterprise;
import Business.Enterprise.EnterpriseType;
import Business.Network.Network;
import ui.Tech.RD.*;
import Business.Organization.Organization;
import Business.Product.Product;
import Business.UserAccount.UserAccount;
import Business.WorkFlowSystem;
import Business.WorkRequest.DeliverWorkRequest;
import Business.WorkRequest.DevelopmentWorkRequest;
import Business.WorkRequest.PurchaseWorkRequest;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import ui.MainJFrame;
import ui.Tech.ProductManager.ViewDevWorkRequest;

/**
 *
 * @author User
 */
public class ManufacturingManagerWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form ProductManagerWorkArea
     */
    JPanel container;
    Organization CurrentOrganization;
    ArrayList<Organization> ProductionLineOrganizations;
    ArrayList<Organization> DeliveryManagerOrganizations;
    UserAccount  UserAccount;
    
    MainJFrame mainFrame;
    Network network;
    public ManufacturingManagerWorkArea(JPanel container,UserAccount UserAccount,Network network, MainJFrame mainFrame) {
        initComponents();
        this.container = container;
        this.CurrentOrganization=UserAccount.getOrganization();
        this.network = network;
        this.mainFrame=mainFrame;
        this.ProductionLineOrganizations = findProductionLineOrganizationInsystem();
        this.DeliveryManagerOrganizations= findDeliveryManagerOrganizationInsystem();
        
       populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLogout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnSendWorkRequestToProductionLine = new javax.swing.JButton();
        btnPurDetail = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequest = new javax.swing.JTable();
        btnViewProductionProgress = new javax.swing.JButton();
        btnCreateDeliveryWorkRequest = new javax.swing.JButton();
        btnSignDeliveryWorkRequest = new javax.swing.JButton();
        btnWorkSummary = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));
        setPreferredSize(new java.awt.Dimension(800, 500));

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 0));
        jLabel2.setText("Manufacturing Manager Role WorkArea");

        btnSendWorkRequestToProductionLine.setText("Send WorkRequest to Production Line ");
        btnSendWorkRequestToProductionLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendWorkRequestToProductionLineActionPerformed(evt);
            }
        });

        btnPurDetail.setText("Report Purchase Order");
        btnPurDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPurDetailActionPerformed(evt);
            }
        });

        tblWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Work Request", "Product", "Status", "Purchase Status", "Order Signed", "Order Verified", "Delivered"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkRequest);

        btnViewProductionProgress.setText("View Production Progress");
        btnViewProductionProgress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProductionProgressActionPerformed(evt);
            }
        });

        btnCreateDeliveryWorkRequest.setText("Start a new Delivery WorkReqeust");
        btnCreateDeliveryWorkRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateDeliveryWorkRequestActionPerformed(evt);
            }
        });

        btnSignDeliveryWorkRequest.setText("Sign Delivery WorkRequest");
        btnSignDeliveryWorkRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignDeliveryWorkRequestActionPerformed(evt);
            }
        });

        btnWorkSummary.setText("View WorkReqeust Summary");
        btnWorkSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWorkSummaryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                        .addComponent(btnLogout))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPurDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSendWorkRequestToProductionLine)
                            .addComponent(btnViewProductionProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnSignDeliveryWorkRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCreateDeliveryWorkRequest, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE))
                            .addComponent(btnWorkSummary, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogout)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPurDetail)
                    .addComponent(btnCreateDeliveryWorkRequest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSendWorkRequestToProductionLine)
                    .addComponent(btnSignDeliveryWorkRequest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewProductionProgress)
                    .addComponent(btnWorkSummary))
                .addGap(110, 110, 110))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        mainFrame.showLoginPanel();
        javax.swing.JOptionPane.showMessageDialog(this, "You have been successfully logged out.");
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnSendWorkRequestToProductionLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendWorkRequestToProductionLineActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblWorkRequest.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a WorkRequest first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) tblWorkRequest.getValueAt(selectedRowIndex, 0); 
        // When signed is true, passing Workrequest to Manufacturing Organization
        if(request.getPurchaseWorkRequest().getSigned()==true){
            for(Organization organization:ProductionLineOrganizations){
                if(isWorkRequestExist(organization,request)==true){
                    JOptionPane.showMessageDialog(this, "This WorkRequest is already existed in ProductionLine Organization!","Warning",JOptionPane.WARNING_MESSAGE);
                    return; 
            }
            else{ 
                 organization.getWorkQueue().addWorkRequest(request);
                JOptionPane.showMessageDialog(this, "This WorkRequest has been passed to ProductionLine Organization!");
                }
            }
            

        }else{
            JOptionPane.showMessageDialog(this, "The PurchaseWorkRequest is not Signed!","Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnSendWorkRequestToProductionLineActionPerformed

    private void btnPurDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPurDetailActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblWorkRequest.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a WorkRequest first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) tblWorkRequest.getValueAt(selectedRowIndex, 0);

        ReportPurchaseWorkRequest reportPurchaseWorkRequest = new ReportPurchaseWorkRequest(container, CurrentOrganization,request);
        container.add("ReportPurchaseWorkRequest", reportPurchaseWorkRequest);
        CardLayout layout=(CardLayout)container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnPurDetailActionPerformed

    private void btnViewProductionProgressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProductionProgressActionPerformed
        // TODO add your handling code here:
         int selectedRowIndex = tblWorkRequest.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a WorkRequest first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) tblWorkRequest.getValueAt(selectedRowIndex, 0);

        ViewProductionWorkRequest viewProductionWorkRequest = new ViewProductionWorkRequest(container, CurrentOrganization,request);
        container.add("ReportPurchaseWorkRequest", viewProductionWorkRequest);
        CardLayout layout=(CardLayout)container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnViewProductionProgressActionPerformed

    private void btnCreateDeliveryWorkRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateDeliveryWorkRequestActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblWorkRequest.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Pls select a WorkRequest first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) tblWorkRequest.getValueAt(selectedRowIndex, 0);

        CreateNewDeliveryWorkRequest cndwr = new CreateNewDeliveryWorkRequest(container, CurrentOrganization,DeliveryManagerOrganizations,request);
        container.add(" CreateNewDeliveryWorkRequest", cndwr );
        CardLayout layout=(CardLayout)container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnCreateDeliveryWorkRequestActionPerformed

    private void btnSignDeliveryWorkRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignDeliveryWorkRequestActionPerformed
        // TODO add your handling code here:
        // 獲取選中的行索引
        int selectedRowIndex = tblWorkRequest.getSelectedRow();
        if (selectedRowIndex < 0) {
            // 如果沒有選中行，顯示警告消息
            JOptionPane.showMessageDialog(this, "Please select a WorkRequest first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // 從表格中獲取選中的 WorkRequest
        WorkRequest selectedRequest = (WorkRequest) tblWorkRequest.getValueAt(selectedRowIndex, 0);

        // 檢查該 WorkRequest 是否是 DeliveryWorkRequest
        DeliverWorkRequest deliverRequest = selectedRequest.getDeliverWorkRequest();
        if (deliverRequest == null) {
            JOptionPane.showMessageDialog(this, "The selected WorkRequest doesn't have a DeliveryWorkRequest yet.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // 跳轉到簽署界面
        ManufacturingManagerSignPanel signPanel = new ManufacturingManagerSignPanel(container, deliverRequest, network, selectedRequest);
        container.add("ManufacturingManagerSignPanel", signPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnSignDeliveryWorkRequestActionPerformed

    private void btnWorkSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWorkSummaryActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblWorkRequest.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a WorkRequest first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) tblWorkRequest.getValueAt(selectedRowIndex, 0);

        ViewWorkReqeustSummary viewWorkReqeustSummary = new ViewWorkReqeustSummary(container, request);
        container.add("ViewWorkReqeustSummary", viewWorkReqeustSummary);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnWorkSummaryActionPerformed

    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) tblWorkRequest.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request :CurrentOrganization.getWorkQueue().getWorkRequests()){
            Object[] row = new Object[7];
            row[0] = request ;
            row[1] = request.getProduct();
            row[2] = request.getStatus();
            ////////////// Make sure the WorkRequest is correct! (Dev, purchase, Deliver, Marketing)
            if(request.getPurchaseWorkRequest()==null){
             row[3] = "Not Started Yet";
            }else{
            row[3] = request.getPurchaseWorkRequest().getPerchaseStatus();
            row[4] = request.getPurchaseWorkRequest().getSigned();
            row[5] = request.getPurchaseWorkRequest().getVerified();
                if(request.getDeliverWorkRequest()==null){ row[6]=false;}
                else{  row[6] = request.getDeliverWorkRequest().getSigned();}
          
            }
            model.addRow(row);
        }
    }
     private ArrayList<Organization> findProductionLineOrganizationInsystem() {
        //遍歷所有network中的enterPrise 直到找到type 符合
        //再搜尋當中Organiation 名稱符合的
         ArrayList<Organization> Organizations = new ArrayList<>();
           for(Enterprise enterprise : network.getEnterpriseList()){
               if(enterprise.getType()==EnterpriseType.MANUFACTURING){
                   for(Organization organization : enterprise.getOrganizationDirectory()){
                       if(organization.getName()=="Production Line"){
                              Organizations.add(organization);
                       }
                   }
               }
           }
       
         return Organizations;// return null if doesn't found
    }
    private ArrayList<Organization> findDeliveryManagerOrganizationInsystem() {
        //遍歷所有network中的enterPrise 直到找到type 符合
        //再搜尋當中Organiation 名稱符合的
       ArrayList<Organization> Organizations = new ArrayList<>();
           for(Enterprise enterprise : network.getEnterpriseList()){
               if(enterprise.getType()==EnterpriseType.DELIVERY){
                   for(Organization organization : enterprise.getOrganizationDirectory()){
                       if(organization.getName()=="Delivery Management"){
                             Organizations.add(organization);
                       }
                   }
               }
           }
       
         return Organizations;// return null if doesn't found
    } 
     private boolean isWorkRequestExist(Organization Organization,WorkRequest CurrentRequest) {
        for(WorkRequest request : Organization.getWorkQueue().getWorkRequests()){
           if(CurrentRequest==request){
              
               return true;
           }
        }
        return false;
    }
    private void populateDemoWorkRequest() {
        
        Product demoProduct = new Product("demoProduct","demoDescription",10,15.3,16,256);
        WorkRequest demoRequest = new WorkRequest("demo",demoProduct);
        demoRequest.setDevelopmentWorkRequest(new DevelopmentWorkRequest(demoProduct));
        demoRequest.getDevelopmentWorkRequest().setVerified(true);
        demoRequest.setPurchaseWorkRequest(new PurchaseWorkRequest("Demo name"));
        CurrentOrganization.getWorkQueue().addWorkRequest(demoRequest);
    } 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateDeliveryWorkRequest;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnPurDetail;
    private javax.swing.JButton btnSendWorkRequestToProductionLine;
    private javax.swing.JButton btnSignDeliveryWorkRequest;
    private javax.swing.JButton btnViewProductionProgress;
    private javax.swing.JButton btnWorkSummary;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblWorkRequest;
    // End of variables declaration//GEN-END:variables

   
}
